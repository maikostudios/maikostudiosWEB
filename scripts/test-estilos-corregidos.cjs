// Script para probar la generaci√≥n de CV con estilos corregidos
const fs = require("fs");

// Configuraci√≥n de Gemini
const GEMINI_API_URL =
  "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent";
const API_KEY = process.env.GEMINI_API_KEY || "YOUR_GEMINI_API_KEY_HERE";

async function generarCV(promptCombinado) {
  const body = {
    contents: [{ role: "user", parts: [{ text: promptCombinado }] }],
  };

  const response = await fetch(`${GEMINI_API_URL}?key=${API_KEY}`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(body),
  });

  if (!response.ok) {
    const error = await response.json();
    console.error("Error de Gemini:", error);
    throw new Error(error.error?.message || `HTTP ${response.status}`);
  }

  const data = await response.json();
  const respuesta = data.candidates?.[0]?.content?.parts?.[0]?.text || "";
  return respuesta;
}

async function probarEstilosCorregidos() {
  console.log("üé® PROBANDO CV CON ESTILOS CSS CORREGIDOS\n");
  console.log("=".repeat(80));

  // PROMPT SISTEMA ACTUALIZADO
  const promptSystem = `Eres MaikoCV, un agente experto en Recursos Humanos del sector TI y Generaci√≥n de CVs Profesionales para Michael Esteban S√°ez Contreras.

üìå Tu objetivo es generar un CV completamente personalizado, optimizado para superar filtros automatizados (ATS) y ser atractivo para reclutadores t√©cnicos y no t√©cnicos del √°rea TI.

üéØ ESTRUCTURA DE TRABAJO:

1. Recibir√°s:
   - Una plantilla HTML con variables tipo {{variable}} que **NO debes modificar en estructura ni dise√±o**.
   - Datos personales, profesionales, t√©cnicos y acad√©micos del candidato en formato JSON.
   - Una posible descripci√≥n de oferta laboral o puesto objetivo.

2. Analiza cuidadosamente:
   - Las coincidencias entre habilidades, experiencia y lo que solicita el puesto.
   - Qu√© informaci√≥n puede ser omitida si no aporta al perfil buscado.
   - C√≥mo mejorar la redacci√≥n para destacar logros, impacto, tecnolog√≠as, resultados y m√©tricas concretas.

3. Adaptaci√≥n del contenido:
   - Reordena, resalta o personaliza la informaci√≥n **respetando la plantilla HTML**.
   - Omite experiencias o cursos no alineados al rol, a menos que puedas reformularlos para a√±adir valor.
   - Redacta en espa√±ol profesional y neutro.
   - Ordena cronol√≥gicamente de lo m√°s reciente a lo m√°s antiguo.

4. Validaci√≥n final (Autoevaluaci√≥n):
   - Antes de entregar el HTML, realiza una evaluaci√≥n interna:
     - ¬øEs coherente y relevante el contenido?
     - ¬øRefleja un perfil t√©cnico moderno y competitivo?
     - ¬øEst√° adaptado al puesto objetivo?
     - ¬øContiene suficientes palabras clave t√©cnicas para sistemas ATS?
     - ¬øTiene un nivel profesional "10 de 10"?

   - Si alguna de las respuestas es "no", vuelve a optimizar el contenido **hasta que todas las respuestas sean afirmativas**.

‚ö†Ô∏è REGLAS OBLIGATORIAS:
- No modifiques el layout, clases CSS, etiquetas HTML ni la sem√°ntica.
- No generes texto fuera del HTML (no uses Markdown, JSON ni explicaciones).
- Devuelve exclusivamente el HTML con las variables reemplazadas.

üí° TU MISI√ìN:
Entregar un CV altamente profesional, adaptado y atractivo tanto para filtros autom√°ticos (ATS) como para reclutadores humanos en tecnolog√≠a, utilizando al m√°ximo los datos proporcionados y tu experiencia en el √°rea de RRHH t√©cnico.`;

  // PLANTILLA HTML CORREGIDA
  const plantillaHTML = `<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <style>
    body { font-family: Arial, sans-serif; margin: 0; padding: 0; color: #000; }
    header { background-color: #121212; color: white; text-align: center; padding: 20px 10px; }
    .sub-header { font-size: 14px; margin-top: 5px; }
    .divider { height: 5px; background-color: #00cccc; }
    section { padding: 20px; }
    h1, h2, h3, h4, h5, h6 { color: #000; margin-bottom: 10px; }
    h2 { color: #00cccc; margin-bottom: 10px; }
    h3 { color: #000; font-size: 16px; font-weight: bold; margin-bottom: 8px; margin-top: 15px; }
    .entry { margin-bottom: 15px; }
    .entry-title { font-weight: bold; color: #000; }
    .footer { background-color: #f0f0f0; text-align: center; font-size: 12px; padding: 10px; }
    p { color: #000; }
    a { color: #00cccc; text-decoration: none; }
    header a { color: white; }
  </style>
</head>
<body>
  <header>
    <h1>{{nombre_completo}}</h1>
    <div class="sub-header">{{cargo_principal}}</div>
    <div class="sub-header">{{email}} | {{telefono}} | <a href="{{linkedin}}" style="color:white;">LinkedIn</a></div>
    <div class="sub-header">{{ubicacion}}</div>
  </header>
  <div class="divider"></div>
  <section>
    <h2>Perfil Profesional</h2>
    <p>{{perfil_profesional}}</p>
  </section>
  <section>
    <h2>Experiencia Profesional</h2>
    {{experiencia_profesional}}
  </section>
  <section>
    <h2>Educaci√≥n</h2>
    {{educacion}}
  </section>
  <section>
    <h2>Habilidades T√©cnicas</h2>
    {{habilidades_tecnicas}}
  </section>
  <section>
    <h2>Habilidades Blandas</h2>
    <p>{{habilidades_blandas}}</p>
  </section>
  <section>
    <h2>Idiomas</h2>
    <p>{{idiomas}}</p>
  </section>
  <div class="footer">
    Contacto: <a href="mailto:{{email}}">{{email}}</a> | <a href="{{linkedin}}">LinkedIn</a>
  </div>
</body>
</html>`;

  // DATOS JSON
  const datosJSON = {
    nombre_completo: "Michael Esteban S√°ez Contreras",
    cargo_principal: "Desarrollador Full Stack",
    email: "m.saezc@maikostudios.com",
    telefono: "+56983833148",
    ubicacion: "Temuco, IX Regi√≥n, Chile",
    linkedin: "https://www.linkedin.com/in/me-saezc/",
    web: "https://maikostudios.com/",
    perfil_profesional:
      "Desarrollador Full Stack con experiencia en Vue.js, Node.js y Firebase. Especializado en crear soluciones web completas y escalables.",
    experiencia_profesional: [
      {
        cargo: "Fundador y Desarrollador",
        empresa: "Maiko Studios",
        periodo: "2024 - Actualidad",
        descripcion:
          "Creaci√≥n de plataformas como DeUna Transferencias, automatizaciones con IA, digitalizaci√≥n para PYMEs y asesor√≠as tecnol√≥gicas.",
      },
      {
        cargo: "Facilitador/Docente Bootcamp Front End",
        empresa: "Desaf√≠o Latam",
        periodo: "Ago 2024 ‚Äì Dic 2024",
        descripcion:
          "Ense√±anza de HTML, CSS, BOOTSTRAP, JAVASCRIPT, y VUE JS en el Programa Talento Digital para Chile.",
      },
      {
        cargo: "Developer Full Stack & Soporte TI",
        empresa: "Tata Consultancy Services ‚Äì Metlife Chile",
        periodo: "Jul 2021 ‚Äì Dic 2023",
        descripcion:
          "Desarrollos para √°rea Direct Marketing. Soporte a aplicaciones y resoluci√≥n de tickets.",
      },
    ],
    habilidades_tecnicas: {
      lenguajes: ["JavaScript", "Python", "Java", "HTML", "CSS"],
      frontend: ["Vue.js", "React", "Angular", "Bootstrap", "Vuetify"],
      backend: ["Node.js", "Express.js", "Spring Boot", "FastAPI"],
      databases: ["PostgreSQL", "MongoDB", "Firebase", "MySQL"],
      cloud: ["Firebase", "AWS", "Google Cloud"],
      tools: ["Git", "Docker", "VS Code", "Figma"],
    },
    educacion: [
      {
        titulo: "Ingenier√≠a en Inform√°tica",
        institucion: "Universidad Cat√≥lica de Temuco",
        periodo: "2017-2021",
      },
      {
        titulo: "T√©cnico en Programaci√≥n",
        institucion: "Instituto AIEP",
        periodo: "2015-2017",
      },
    ],
    idiomas: [
      { idioma: "Espa√±ol", nivel: "Nativo" },
      { idioma: "Ingl√©s", nivel: "Intermedio" },
    ],
    habilidades_blandas:
      "Liderazgo de equipos, Comunicaci√≥n efectiva, Resoluci√≥n de problemas, Adaptabilidad, Trabajo en equipo, Mentor√≠a t√©cnica",
  };

  // PROMPT USUARIO ACTUALIZADO
  const userPrompt =
    "CV para desarrollador Frontend especializado en Vue.js, destacar experiencia en interfaces modernas y UX";

  const promptUser = `üìÑ PLANTILLA HTML MAESTRA (NO MODIFICAR ESTRUCTURA):
La siguiente plantilla contiene variables {{variable}} que debes reemplazar con los datos del JSON:

${plantillaHTML}

üë§ DATOS DEL CANDIDATO (FUENTE: Firebase Database):
Utiliza estos datos reales para reemplazar las variables {{}} en la plantilla:

${JSON.stringify(datosJSON, null, 2)}

üîç VARIABLES A REEMPLAZAR:
- {{nombre_completo}} ‚Üí Usar campo "nombre_completo" del JSON
- {{cargo_principal}} ‚Üí Usar campo "cargo_principal" del JSON  
- {{email}} ‚Üí Usar campo "email" del JSON
- {{telefono}} ‚Üí Usar campo "telefono" del JSON
- {{ubicacion}} ‚Üí Usar campo "ubicacion" del JSON
- {{linkedin}} ‚Üí Usar campo "linkedin" del JSON
- {{perfil_profesional}} ‚Üí Usar campo "perfil_profesional" del JSON
- {{experiencia_profesional}} ‚Üí Convertir array "experiencia_profesional" a HTML estructurado
- {{educacion}} ‚Üí Convertir array "educacion" a HTML estructurado
- {{habilidades_tecnicas}} ‚Üí Convertir objeto "habilidades_tecnicas" a HTML organizado por categor√≠as
- {{habilidades_blandas}} ‚Üí Usar campo "habilidades_blandas" del JSON
- {{idiomas}} ‚Üí Convertir array "idiomas" a formato legible

‚öôÔ∏è INSTRUCCIONES ESPEC√çFICAS:
1. Para arrays (experiencia, educaci√≥n): Crea HTML con estructura <div class="entry"> para cada elemento
2. Para habilidades t√©cnicas: Organiza por categor√≠as usando <h3> (Frontend, Backend, Databases, etc.)
3. Mant√©n colores exactos: header #121212, t√≠tulos h2 #00cccc, footer #f0f0f0
4. IMPORTANTE: Todos los textos deben ser color negro (#000) - NO uses colores grises
5. Los elementos <h3> ya tienen estilos definidos en CSS - NO agregues estilos inline
6. Ordena cronol√≥gicamente de m√°s reciente a m√°s antiguo
7. Optimiza descripciones para ATS con palabras clave t√©cnicas
8. Devuelve SOLO el HTML final, sin explicaciones

üéØ PERSONALIZACI√ìN PARA PUESTO ESPEC√çFICO:
"${userPrompt}"

Aplica esta personalizaci√≥n:
- Destaca habilidades y experiencias relevantes al puesto
- Ajusta descripciones para incluir palabras clave del sector
- Reordena informaci√≥n por relevancia al rol objetivo
- Mant√©n estructura HTML base intacta

‚úÖ RESULTADO ESPERADO:
HTML completo con todas las variables {{}} reemplazadas, optimizado para ATS y reclutadores t√©cnicos, listo para renderizar o convertir a PDF.`;

  // PROMPT COMBINADO
  const promptCombinado = `${promptSystem}\n\n---\n\n${promptUser}`;

  console.log("üìä ESTAD√çSTICAS:");
  console.log(
    `üî§ Longitud prompt combinado: ${promptCombinado.length} caracteres`
  );
  console.log(`üéØ Personalizaci√≥n: "${userPrompt}"`);

  try {
    console.log("\nü§ñ Generando CV con estilos corregidos...");

    const htmlGenerado = await generarCV(promptCombinado);

    console.log("\n‚úÖ CV generado exitosamente!");
    console.log(`üìè Longitud HTML: ${htmlGenerado.length} caracteres`);

    // Guardar el HTML generado
    fs.writeFileSync("cv-estilos-corregidos.html", htmlGenerado);
    console.log("üíæ CV guardado como: cv-estilos-corregidos.html");

    // Verificar que no hay elementos con colores grises
    const tieneGris =
      htmlGenerado.includes("color: gray") ||
      htmlGenerado.includes("color: grey") ||
      htmlGenerado.includes("color:#gray") ||
      htmlGenerado.includes("color:#grey");

    console.log("\nüîç VERIFICACI√ìN DE COLORES:");
    if (tieneGris) {
      console.log("‚ùå ADVERTENCIA: Se encontraron elementos con color gris");
    } else {
      console.log("‚úÖ No se encontraron elementos con color gris");
    }

    // Contar elementos h3
    const h3Count = (htmlGenerado.match(/<h3>/g) || []).length;
    console.log(`üìã Elementos <h3> generados: ${h3Count}`);

    console.log("\nüéØ MEJORAS APLICADAS:");
    console.log("‚úÖ Estilos CSS para h1, h2, h3, h4, h5, h6");
    console.log("‚úÖ Color negro (#000) para todos los encabezados");
    console.log("‚úÖ Color negro (#000) para p√°rrafos y texto");
    console.log("‚úÖ Color turquesa (#00cccc) solo para h2 y enlaces");
    console.log("‚úÖ Color blanco para enlaces en header");

    return true;
  } catch (error) {
    console.error("\n‚ùå Error generando CV:");
    console.error("Message:", error.message);
    return false;
  }
}

// Verificar si fetch est√° disponible
async function main() {
  if (typeof fetch === "undefined") {
    const { default: fetch } = await import("node-fetch");
    global.fetch = fetch;
  }

  await probarEstilosCorregidos();
  console.log("\n‚úÖ Prueba de estilos corregidos completada");
}

main().catch(console.error);
